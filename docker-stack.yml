version: '3.8'

services:
  database:
    image: postgres:17-alpine
    container_name: database
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - my-db-data:/var/lib/postgresql/data
      - ./backend/initial_schema.sql:/docker-entrypoint-initdb.d/initdb.sql:ro
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == database
      restart_policy:
        condition: on-failure
    networks:
      - app_net

  backend:
    image: masterkey75/notizblock-backend:v1.0
    container_name: backend-service
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == backend
      restart_policy:
        condition: on-failure
    networks:
      - app_net

  frontend:
    image: masterkey75/notizblock-frontend:v1.0
    container_name: frontend-app
    ports:
      - "8080:80"
    environment:
      VITE_API_URL: http://backend:3000/api
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.role == frontend
      restart_policy:
        condition: on-failure
    networks:
      - app_net

volumes:
  my-db-data:

networks:
  app_net:
    driver: overlay